-- Categories table
CREATE TABLE IF NOT EXISTS categories (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE
);

-- Packages table
CREATE TABLE IF NOT EXISTS packages (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    category_id INTEGER NOT NULL,
    package_name TEXT NOT NULL UNIQUE,
    store_info_en TEXT,
    store_info_fr TEXT,
    store_info_he TEXT,
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

-- Version table
CREATE TABLE IF NOT EXISTS version (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    release_name TEXT NOT NULL
);

-- Get all categories
getAllCategories:
SELECT * FROM categories ORDER BY name;

-- Get category by name
getCategoryByName:
SELECT * FROM categories WHERE name = ?;

-- Get all packages
getAllPackages:
SELECT p.*, c.name AS category_name
FROM packages p
JOIN categories c ON p.category_id = c.id
ORDER BY p.package_name;

-- Get packages by category
getPackagesByCategory:
SELECT p.*, c.name AS category_name
FROM packages p
JOIN categories c ON p.category_id = c.id
WHERE c.name = ?
ORDER BY p.package_name;

-- Get package by name
getPackageByName:
SELECT p.*, c.name AS category_name
FROM packages p
JOIN categories c ON p.category_id = c.id
WHERE p.package_name = ?;

-- Get current version
getCurrentVersion:
SELECT * FROM version ORDER BY id DESC LIMIT 1;

